<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hashtagteam.mapper.PostMapper">
    <!-- 공통 조건절 -->
    <sql id="searchCondition">
        LEFT OUTER JOIN posts_tag pt ON p.post_id = pt.post_id
        LEFT OUTER JOIN tag h ON pt.tag_id = h.tag_id
        <where>
            <if test='key != null and key != ""'>
                <if test='"title".equals(key)'>
                    title LIKE CONCAT('%', #{keyword},'%')
                </if>
                <if test='"content".equals(key)'>
                    content LIKE CONCAT('%', #{keyword},'%')
                </if>
                <if test='"all".equals(key)'>
                    title LIKE CONCAT('%', #{keyword},'%')
                    OR content LIKE CONCAT('%', #{keyword},'%')
                </if>
            </if>

            <if test='startDt != null and startDt !=""'>
                created_date BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="hashtags != null and hashtags.size() > 0">
                <foreach item="tag" collection="hashtags" open="" separator=" OR " close="">
                    h.tag_nm LIKE CONCAT('%', #{tag}, '%')
                </foreach>
            </if>
        </where>
    </sql>

    <!-- 게시글 목록 조회 -->
    <select id="getPostList" parameterType="map" resultType="PostDTO">
        SELECT p.title
        ,p.user_id
        ,p.created_date
        ,p.view_count
        ,p.post_id
        ,(SELECT CONCAT(f.save_path, '/', f.save_file_nm)
        FROM files f
        WHERE f.post_id = p.post_id
        ORDER BY f.file_id DESC
        LIMIT 1) AS img_url
        FROM posts p
        <include refid="searchCondition"/>
        GROUP BY p.post_id
        ORDER BY created_date DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!--게시글 총개수 조회-->
    <select id="getPostCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM posts p
        <include refid="searchCondition"/>
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="getPostDetail" parameterType="String" resultMap="postResultMap">
        SELECT p.title
             , p.post_id
             , p.content
             , p.user_id
             , p.created_date
             , p.view_count
             , h.tag_nm
        FROM posts p
                 LEFT OUTER JOIN posts_tag pt ON p.post_id = pt.post_id
                 LEFT OUTER JOIN tag h ON pt.tag_id = h.tag_id
        WHERE p.post_id = #{postId}
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="countTag" parameterType="String" resultType="Integer">
        SELECT p.title
             , p.post_id
             , p.content
             , p.user_id
             , p.created_date
             , p.view_count
             , (SELECT f.save_path
                FROM files f
                WHERE f.post_id = p.post_id
                ORDER BY F.file_id DESC
            LIMIT
            1) AS img_url
                ,h.tag_nm
        FROM posts p LEFT OUTER JOIN posts_tag pt
        ON p.post_id = pt.post_id
            LEFT OUTER JOIN tag h ON pt.tag_id = h.tag_id
        WHERE p.post_id = #{postId}
    </select>

    <!--해시태그 일괄 삭제-->
    <delete id="deleteTags" parameterType="list">
        DELETE FROM tags
        WHERE tag_nm IN
        <foreach item="tag" collection="list" open="(" separator="," close=")">
            #{tagNm}
        </foreach>
    </delete>

    <!--해시태그 사용한 게시글 수 조회-->
    <select id="countPostsByTag" parameterType="list">
        SELECT COUNT(*)
        FROM posts p
                 LEFT OUTER JOIN posts_tag pt ON p.post_id = pt.post_id
                 LEFT OUTER JOIN tag h ON pt.tag_id = h.tag_id
        WHERE h.tag_nm = #{tagNm}
    </select>

    <!--게시글 수정-->
    <update id="updatePost">
        UPDATE posts
        SET title        = #{title},
            content      = #{content},
            updated_date = NOW()
        WHERE post_id = #{postId}
    </update>

    <resultMap id="postResultMap" type="PostDTO">
        <id property="postId" column="post_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="userId" column="user_id"/>
        <result property="createdDate" column="created_date"/>
        <result property="viewCount" column="view_count"/>
        <collection property="hashtags" ofType="String">
            <result column="tag_nm"/>
        </collection>
    </resultMap>
</mapper>